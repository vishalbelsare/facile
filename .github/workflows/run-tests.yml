name: tests

on:
  push:
  workflow_dispatch:

env:
  UBUNTU_SWITCH: 4.04.2+fPIC
  WINDOWS_SWITCH: 4.12.0+msvc64

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - 4.12.0
        python-version:
          - 3.7
          - 3.8
          - 3.9

    steps:
      - name: Checkout Python code
        uses: actions/checkout@v2

      - name: tmate session if tests fail
        if: failure() # && github.event_name == 'workflow_dispatch'
        uses: mxschmitt/action-tmate@v3

      - name: Set up private ssh key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Checkout OCaml facile library
        run: |
          ssh-keyscan git.recherche.enac.fr > ~/.ssh/known_hosts
          git clone git@git.recherche.enac.fr:facile.git facile.ml
          cd facile.ml
          git checkout 03a93f9
        # shouldn't be necessary for now after we switched to a +fPIC variant
        # sed -i "/BUILD =/ s/$/ -ocamlopt 'ocamlopt -runtime-variant _pic'/" Makefile

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          version: 1.1.6
          virtualenvs-in-project: true

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Switch to most recent +fPIC variant (Ubuntu only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          opam switch create $UBUNTU_SWITCH
          opam switch $UBUNTU_SWITCH

      - name: Switch to msvc64 variant (Windows only)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          opam switch create $WINDOWS_SWITCH
          opam switch $WINDOWS_SWITCH

      - name: Compile and install facile.ml library (MacOS)
        if: ${{ matrix.os == 'macos-latest' }}
        working-directory: ./facile.ml
        run: |
          opam install ocamlfind ocamlbuild
          opam exec -- make
          opam exec -- make install

      - name: Compile and install facile.ml library (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        working-directory: ./facile.ml
        run: |
          opam install --switch=$UBUNTU_SWITCH ocamlfind ocamlbuild
          opam exec --switch=$UBUNTU_SWITCH -- make
          opam exec --switch=$UBUNTU_SWITCH -- make install

      - name: Compile and install facile.ml library (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        working-directory: ./facile.ml
        run: |
          opam install --switch=$UBUNTU_SWITCH ocamlfind ocamlbuild
          opam exec --switch=$UBUNTU_SWITCH -- make
          opam exec --switch=$UBUNTU_SWITCH -- make install

      - name: Install Python facile library (MacOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          opam exec -- poetry install

      - name: Install Python facile library (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          eval $(opam env --set-switch --switch=$UBUNTU_SWITCH)
          opam exec -- poetry install

      - name: Install Python facile library (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          eval $(opam env --set-switch --switch=$WINDOWS_SWITCH)
          opam exec -- poetry install

      - name: Style checking
        run: |
          poetry run flake8 facile examples tests
          poetry run isort --check-only facile examples tests
          poetry run black --check facile examples tests

      - name: Type checking
        run: |
          poetry run mypy facile examples tests

      - name: Run Pytest
        run: |
          poetry run pytest

      - name: Build wheel
        run: |
          poetry build

      - name: Upload the build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.python-version }}-facile-wheel
          path: dist/*.whl
